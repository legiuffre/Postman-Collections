{
	"info": {
		"_postman_id": "02408f09-9f03-47cd-8a4e-c89a5b188043",
		"name": "Production",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28539332",
		"_collection_link": "https://team-rel.postman.co/workspace/Team-REL~69846068-eace-44a2-859b-d7fdf1b963c6/collection/28539332-02408f09-9f03-47cd-8a4e-c89a5b188043?action=share&source=collection_link&creator=28539332"
	},
	"item": [
		{
			"name": "Zoho CRM",
			"item": [
				{
					"name": "Generate Access Token and Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseCode.code === 200)\r",
									"{\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"    pm.environment.set(\"prod-refresh-token\", jsonData.refresh_token);\r",
									"    pm.environment.set(\"prod-access-token\", jsonData.access_token);\r",
									"    pm.environment.set(\"prod-expiry-time\", Date.now() + parseInt(jsonData.expires_in));\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://accounts.zoho.com/oauth/v2/token?access_type=offline&prompt=consent&client_id={{prod_zoho_client_id}}&client_secret={{prod_zoho_client_secret}}&redirect_uri=https://www.getpostman.com/oauth2/callback&code=1000.60c3878e7b82aa60c46e2710d80d1621.b9c49c3c379f9cd4ce1fd352784f10af&grant_type=authorization_code",
							"protocol": "https",
							"host": [
								"accounts",
								"zoho",
								"com"
							],
							"path": [
								"oauth",
								"v2",
								"token"
							],
							"query": [
								{
									"key": "access_type",
									"value": "offline"
								},
								{
									"key": "prompt",
									"value": "consent"
								},
								{
									"key": "client_id",
									"value": "{{prod_zoho_client_id}}"
								},
								{
									"key": "client_secret",
									"value": "{{prod_zoho_client_secret}}"
								},
								{
									"key": "redirect_uri",
									"value": "https://www.getpostman.com/oauth2/callback"
								},
								{
									"key": "code",
									"value": "1000.60c3878e7b82aa60c46e2710d80d1621.b9c49c3c379f9cd4ce1fd352784f10af"
								},
								{
									"key": "grant_type",
									"value": "authorization_code"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Access Tokens",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"client_id\", pm.environment.get(\"prod_zoho_client_id\"));\r",
									"pm.variables.set(\"client_secret\", pm.environment.get(\"prod_zoho_client_secret\"));\r",
									"pm.variables.set(\"refresh_token\", pm.environment.get(\"prod-refresh-token\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "client_id",
									"value": "{{prod_zoho_client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{prod_zoho_client_secret}}",
									"type": "text"
								},
								{
									"key": "refresh_token",
									"value": "{{prod-refresh-token}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "refresh_token",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://accounts.zoho.com/oauth/v2/token",
							"protocol": "https",
							"host": [
								"accounts",
								"zoho",
								"com"
							],
							"path": [
								"oauth",
								"v2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Access Tokens - Client Credentials",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"client_id\", pm.environment.get(\"prod_zoho_client_id\"));\r",
									"pm.variables.set(\"client_secret\", pm.environment.get(\"prod_zoho_client_secret\"));\r",
									"pm.variables.set(\"refresh_token\", pm.environment.get(\"prod-refresh-token\"));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"zoho_access_token\",jsonData.access_token);\r",
									"console.log(\"access_token: \" + jsonData.access_token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://accounts.zoho.com/oauth/v2/token?client_id={{prod_zoho_client_id}}&client_secret={{prod_zoho_client_secret}}&grant_type=client_credentials&scope=ZohoCRM.modules.ALL,ZohoCRM.settings.ALL,ZohoCRM.coql.READ,ZohoAnalytics.fullaccess.all&soid={{zoho_org_soid}}",
							"protocol": "https",
							"host": [
								"accounts",
								"zoho",
								"com"
							],
							"path": [
								"oauth",
								"v2",
								"token"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{prod_zoho_client_id}}"
								},
								{
									"key": "client_secret",
									"value": "{{prod_zoho_client_secret}}"
								},
								{
									"key": "grant_type",
									"value": "client_credentials"
								},
								{
									"key": "scope",
									"value": "ZohoCRM.modules.ALL,ZohoCRM.settings.ALL,ZohoCRM.coql.READ,ZohoAnalytics.fullaccess.all"
								},
								{
									"key": "soid",
									"value": "{{zoho_org_soid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "COQL Request - TEST",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"select_query\" : \"SELECT Owner1.Account_Name as Account_Name, Owner1, Name, Truck_Year, Truck_Make, Truck_Model, Tractor_Type, Truck_Status, Zonar_GPS_ID, Non_Zonar FROM Trucks WHERE Truck_Status = '-Delivered' AND Zonar_GPS_ID is not null limit 0,700\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/coql",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"coql"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Select Truck by VIN & Last_Update_Prop_Tax_Escrow COQL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.variables.set(\"today\", encodeURIComponent(moment().format(\"YYYY-MM-DD\")));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"select_query\" : \"SELECT id, Name FROM Trucks WHERE Name = '{{truckVIN}}' AND Last_Update_Prop_Tax_Escrow < '{{today}}'\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/coql",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"coql"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Select Truck by VIN & Last_Update_Escrow",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.variables.set(\"today\", encodeURIComponent(moment().format(\"YYYY-MM-DD\")));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"select_query\" : \"SELECT id, Name FROM Trucks WHERE Name = '{{truckVIN}}' AND (Last_Update_Escrow < '{{today}}' OR Last_Update_Escrow is null)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/coql",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"coql"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Select Truck by VIN & Last_Update_Escrow COQL TEST",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.variables.set(\"today\", encodeURIComponent(moment().format(\"YYYY-MM-DD\")));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"select_query\" : \"SELECT id, Name FROM Trucks WHERE Name = '4V4WC9EH5NN304928-A' AND (Last_Update_Escrow < '{{today}}' OR Last_Update_Escrow is null)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/coql",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"coql"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Select Truck by VIN",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"select_query\" : \"SELECT id, Name FROM Trucks WHERE Name = '{{truckVIN}}'\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/coql",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"coql"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST SELECT Truck from CRM - TEST",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.variables.set(\"today\", encodeURIComponent(moment().format(\"YYYY-MM-DDTHH:mm:ssZ\")));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"select_query\" : \"SELECT id, Truck_Status, Name, Mileage_Last_Updated, Zonar_GPS_ID, Lease_Start_Date FROM Trucks WHERE ((Truck_Status = '-Delivered' and Zonar_GPS_ID is not null) and (Mileage_Last_Updated < '2024-06-25T00:00:00+05:00' or Mileage_Last_Updated is null))\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/coql",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"coql"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Get Delivered Trucks with Zonar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"select_query\" : \"SELECT id, Name, Mileage_Last_Updated, Zonar_GPS_ID, Lease_Start_Date, Current_Mileage from Trucks where (Truck_Status = '-Delivered' and (Mileage_Last_Updated < '{{today}}' or Mileage_Last_Updated is null)) and (Zonar_GPS_ID is not null) limit {{limit}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/coql",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"coql"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Get Delivered Trucks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"select_query\" : \"SELECT id, Name, Mileage_Last_Updated, Lease_Start_Date, Current_Mileage from Trucks where (Truck_Status = '-Delivered' and (Mileage_Last_Updated < '{{today}}' or Mileage_Last_Updated is null)) limit {{limit}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/coql",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"coql"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Get Delivered Trucks - Escrow Detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{zoho_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"select_query\" : \"SELECT id, Name from Trucks where Truck_Status = '-Delivered' OR Truck_Status = 'Virtual' OR Truck_Status = 'REL Solution Only' limit {{limit}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/coql",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"coql"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Get Delivered Trucks - Escrow Detail Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{zoho_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"select_query\" : \"SELECT id, Name from Trucks where (Truck_Status = '-Delivered') or (Truck_Status = 'Virtual') or (Truck_Status = 'REL Solution Only')\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/coql",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"coql"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Get Delivered Truck with Zonar - DEV",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"select_query\" : \"SELECT id, Name, Mileage_Last_Updated, Zonar_GPS_ID, Lease_Start_Date, Current_Mileage from Trucks where Zonar_GPS_ID = '30044766'\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/coql",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"coql"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Get Delivered Trucks W/O Mileage Last Updated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"try {\r",
									"    const moment = require('moment');\r",
									"    const today = moment().startOf('day').format(\"YYYY-MM-DDTHH:mm:ssZ\");\r",
									"    pm.environment.set(\"today\", today);\r",
									"    console.log(\"Environment variable 'today' set to:\", today);\r",
									"} catch (error) {\r",
									"    console.error(\"Error setting environment variable:\", error.message);\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"select_query\" : \"SELECT id, Name, Mileage_Last_Updated, Zonar_GPS_ID, Lease_Start_Date, Current_Mileage from Trucks where (Truck_Status = '-Delivered') and (Zonar_GPS_ID is not null) limit 1000\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/coql",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"coql"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Get Single Truck",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"const today = moment().startOf('day').format(\"YYYY-MM-DDTHH:mm:ssZ\");\r",
									"pm.environment.set(\"today\",today);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"select_query\" : \"SELECT id, Name, Mileage_Last_Updated, Zonar_GPS_ID, Lease_Start_Date, Current_Mileage from Trucks where Name = '{{truck_Vin}}'\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/coql",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"coql"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Get Trucks that Haven't Moved",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"const today = moment().startOf('day').format(\"YYYY-MM-DDTHH:mm:ssZ\");\r",
									"pm.environment.set(\"today\",today);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"select_query\" : \"SELECT id, Name, Mileage_Last_Updated, Zonar_GPS_ID, Lease_Start_Date, Current_Mileage from Trucks where ((Mileage_Driven = 0 or Mileage_Driven is null) and (Truck_Status = '-Delivered')) and (Zonar_GPS_ID is not null) LIMIT 400\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/coql",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"coql"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Get SUMS on Truck",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"const today = moment().startOf('day').format(\"YYYY-MM-DDTHH:mm:ssZ\");\r",
									"pm.environment.set(\"today\",today);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"select_query\": \"SELECT SUM(Escrow) AS s_Escrow, SUM(Cust_Balance) AS s_Truck_Balance FROM Trucks WHERE Owner1 = \\\"4816208000001511193\\\" AND (((Truck_Status = \\\"-Delivered\\\") OR (Truck_Status = \\\"Virtual\\\")) OR Truck_Status = \\\"REL Solution Only\\\")\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/coql",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"coql"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Account by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v7/Accounts/{{z_Accounts_acct_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v7",
								"Accounts",
								"{{z_Accounts_acct_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Accounts?fields=id,Account_Name&page={{page}}&per_page={{per_page}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Accounts"
							],
							"query": [
								{
									"key": "fields",
									"value": "id,Account_Name"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "per_page",
									"value": "{{per_page}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Trucks from Account ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Accounts/{{acct_id}}/Trucks?fields=id,Name,Owner1",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Accounts",
								"{{acct_id}}",
								"Trucks"
							],
							"query": [
								{
									"key": "fields",
									"value": "id,Name,Owner1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Trucks from Account ID - dev",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Accounts/4816208000001511193/Trucks?fields=id,Name",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Accounts",
								"4816208000001511193",
								"Trucks"
							],
							"query": [
								{
									"key": "fields",
									"value": "id,Name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Timeline of Truck Record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonData = pm.response.json();\r",
									"timeline = jsonData.__timeline;\r",
									"\r",
									"console.log(timeline.length);\r",
									"if (timeline.length > 0) {\r",
									"    for(let i = 0; i < timeline.length; i++) {\r",
									"    // console.log(\"timeline instance: \" + JSON.stringify(timeline[index]));\r",
									"        const field_history = timeline[i].field_history;\r",
									"        // console.log(\"field_history: \" + JSON.stringify(field_history));\r",
									"        \r",
									"        for(let f_index = 0; f_index < field_history.length; f_index++) {\r",
									"            const api_name = field_history[f_index].api_name;\r",
									"            console.log(\"api_name: \" + JSON.stringify(api_name));\r",
									"            if(api_name == 'MPG')\r",
									"            {\r",
									"                console.log(\"MPG: \" + field_history._value);\r",
									"            }\r",
									"            f_index++;\r",
									"        }\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"truck_id_timeline\",\"4816208000072394124\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{zoho_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/{{truck_id_timeline}}/__timeline?sort_by=audited_time&fields=audited_time,done_by,record,field_history&filters=%7B%22field%22%3A%7B%22api_name%22%3A%22source%22%7D%2C%22comparator%22%3A%22equal%22%2C%22value%22%3A%22crm_api%22%7D%20%7B%22field%22%3A%7B%22api_name%22%3A%22done_by%22%7D%2C%22comparator%22%3A%22in%22%2C%22value%22%3A%5B%224816208000051698001%22%5D%7D",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"{{truck_id_timeline}}",
								"__timeline"
							],
							"query": [
								{
									"key": "sort_by",
									"value": "audited_time"
								},
								{
									"key": "fields",
									"value": "audited_time,done_by,record,field_history"
								},
								{
									"key": "filters",
									"value": "%7B%22field%22%3A%7B%22api_name%22%3A%22source%22%7D%2C%22comparator%22%3A%22equal%22%2C%22value%22%3A%22crm_api%22%7D%20%7B%22field%22%3A%7B%22api_name%22%3A%22done_by%22%7D%2C%22comparator%22%3A%22in%22%2C%22value%22%3A%5B%224816208000051698001%22%5D%7D"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Truck by VIN - Last Update Escrow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.variables.set(\"today\", encodeURIComponent(moment().format(\"YYYY-MM-DD\")));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/search?criteria=((Name%3Ain%3A{{z_VIN}})and(Last_Update_Escrow%3Aless_than%3A{{today}}))",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"search"
							],
							"query": [
								{
									"key": "criteria",
									"value": "((Name%3Ain%3A{{z_VIN}})and(Last_Update_Escrow%3Aless_than%3A{{today}}))"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Truck by VIN - Last Update Prop Tax Escrow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.variables.set(\"today\", encodeURIComponent(moment().format(\"YYYY-MM-DD\")));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/search?criteria=((Name%3Aequals%3A{{z_VIN}})and(Last_Update_Prop_Tax_Escrow%3Aless_than%3A{{today}}))",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"search"
							],
							"query": [
								{
									"key": "criteria",
									"value": "((Name%3Aequals%3A{{z_VIN}})and(Last_Update_Prop_Tax_Escrow%3Aless_than%3A{{today}}))"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Truck by VIN w/o Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.variables.set(\"today\", encodeURIComponent(moment().format(\"YYYY-MM-DD\")));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/search?criteria=((Name%3Aequals%3A{{z_VIN}}))",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"search"
							],
							"query": [
								{
									"key": "criteria",
									"value": "((Name%3Aequals%3A{{z_VIN}}))"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Truck PM Rec ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/{{z_truck_id}}/Truck_PM?fields=id",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"{{z_truck_id}}",
								"Truck_PM"
							],
							"query": [
								{
									"key": "fields",
									"value": "id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Sales Assist Rec ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/{{z_truck_id}}/Sales_Assist?fields=id",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"{{z_truck_id}}",
								"Sales_Assist"
							],
							"query": [
								{
									"key": "fields",
									"value": "id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Truck by VIN - TEST",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.variables.set(\"today\", encodeURIComponent(moment().format(\"YYYY-MM-DD\")));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{zoho_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/search?criteria=(Name%3Aequals%3A3AKJHHDR8KSKC1618)and(Last_Update_Escrow%3Aless_than%3A{{today}})",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"search"
							],
							"query": [
								{
									"key": "criteria",
									"value": "(Name%3Aequals%3A3AKJHHDR8KSKC1618)and(Last_Update_Escrow%3Aless_than%3A{{today}})"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Sales Order by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Sales_Orders/{{z_so_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Sales_Orders",
								"{{z_so_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Ready Invoices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Invoices/search?criteria=(Status:equals:Approved)",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Invoices",
								"search"
							],
							"query": [
								{
									"key": "criteria",
									"value": "(Status:equals:Approved)"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET SCO Billing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v7/Invoices/search?criteria=((Status:equals:SCO Billing)or(Status:equals:SCO Escrow Billing))",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v7",
								"Invoices",
								"search"
							],
							"query": [
								{
									"key": "criteria",
									"value": "((Status:equals:SCO Billing)or(Status:equals:SCO Escrow Billing))"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Invoice Information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v7/Invoices/{{invoice_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v7",
								"Invoices",
								"{{invoice_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Invoice Information - DEV",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v7/Invoices/4816208000089141397",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v7",
								"Invoices",
								"4816208000089141397"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Ready for NetLessor Lease",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", () => {\r",
									"  pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});\r",
									"\r",
									"if(pm.response.code === 200) {\r",
									"    pm.test(\"Body contains data\", () => {\r",
									"        pm.expect(pm.response.text()).to.include(\"data\");\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{zoho_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Sales_Orders/search?criteria=(Status:equals:Ready For NetLessor Lease)",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Sales_Orders",
								"search"
							],
							"query": [
								{
									"key": "criteria",
									"value": "(Status:equals:Ready For NetLessor Lease)"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Product by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Products/{{z_prod_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Products",
								"{{z_prod_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Truck Monthly Loan Financials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test if the response status code is 200 OK\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Test if the response body is a valid JSON\r",
									"pm.test(\"Response body is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"// Test if the response contains a specific key\r",
									"pm.test(\"Response contains key 'data'\", function () {\r",
									"    pm.expect(pm.response.json()).to.have.property('data');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": [\r\n        {\r\n            \"REL_Monthly_Pmt\": {{z_rel_monthly_pmt}},\r\n            \"Remaining_REL_Obligation\": {{z_remaining_rel_obligation}},\r\n            \"Acquisition_Cost\": {{z_acquisition_cost}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/{{z_truck_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"{{z_truck_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Truck Mileage & MPG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": [\r\n        {\r\n            \"MPG\": {{MPG}},\r\n            \"Mileage_Last_Updated\": \"{{today}}\",\r\n            \"Current_Mileage\": {{New_Odometer}},\r\n            \"Mileage_Driven\": {{Distance_Traveled_7_Days}},\r\n            \"Mileage_Driven_in_Last_Day\": {{Distance_Traveled_1_Day}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/{{z_truck_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"{{z_truck_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Truck EOL Mileage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": [\r\n        {\r\n            \"Mileage_Driven_Since_EOL\": {{Mileage_Driven_EOL}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/{{z_truck_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"{{z_truck_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Truck MPG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.variables.set(\"today\", moment().format(\"YYYY-MM-DDTHH:mm:ssZ\"));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": [\r\n        {\r\n            \"MPG\": {{MPG}},\r\n            \"Mileage_Last_Updated\": \"{{today}}\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/{{z_truck_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"{{z_truck_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Truck Mileage W/O MPG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": [\r\n        {\r\n            \"Mileage_Last_Updated\": \"{{today}}\",\r\n            \"Current_Mileage\": {{New_Odometer}},\r\n            \"Mileage_Driven\": {{Distance_Traveled_7_Days}},\r\n            \"Mileage_Driven_in_Last_Day\": {{Distance_Traveled_1_Day}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/{{z_truck_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"{{z_truck_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Truck PM Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": [\r\n        {\r\n            \"Solution_Center_Start_Date\": {{In_Service_Date}},\r\n            \"Current_Mileage\": {{New_Odometer}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Truck_PM/{{z_truck_pm_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Truck_PM",
								"{{z_truck_pm_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Invoice to Processed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_Token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": [\r\n        {\r\n            \"Status\": \"Processed\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v7/Invoices/{{inv_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v7",
								"Invoices",
								"{{inv_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Sales Order to Invoiced",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": [\r\n        {\r\n            \"Status\": \"Invoiced\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Sales_Orders/{{inv_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Sales_Orders",
								"{{inv_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Truck Financials",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Parse the date string from the variables\r",
									"const dateFunded = new Date(pm.variables.get(\"dateFunded\"));\r",
									"const leaseExpiration = new Date(pm.variables.get(\"leaseExpiration\"));\r",
									"\r",
									"// Format the dates as YYYY-MM-DD\r",
									"const dfFormatted = dateFunded.toISOString().split('T')[0];\r",
									"const leFormatted = leaseExpiration.toISOString().split('T')[0];\r",
									"\r",
									"// Set the formatted date back to the variables\r",
									"pm.variables.set(\"dateFunded\", dfFormatted);\r",
									"pm.variables.set(\"leaseExpiration\", leFormatted);\r",
									"\r",
									"// Get the value of the variable\r",
									"const wklyPmtValue = pm.variables.get(\"wklyPmt\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (!wklyPmtValue) {\r",
									"    pm.variables.set(\"wklyPmt\",0);\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": [\r\n    {\r\n    \"Financed_Amount\": \"{{salesPrice}}\",\r\n    \"Terms_Weeks\": \"{{leaseTerm}}\",\r\n    \"Residual\" : \"{{residual}}\",\r\n    \"Down_Payment\" : \"{{downPayment}}\",\r\n    \"Weekly_Payment\" : \"{{wklyPmt}}\",\r\n    \"Weekly_Escrow_Payment\" : \"{{wklyEscrow}}\",\r\n    \"Interest_Rate\" : \"{{interestRate}}\",\r\n    \"Lease_Expiration\" : \"{{leaseExpiration}}\",\r\n    \"Date_Funded\" : \"{{dateFunded}}\",\r\n    \"PhysDam_Wkly_Premium\" : \"{{physDamWklyPmt}}\",\r\n    \"Property_Tax_Escrow\" : \"{{propertyTax}}\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/{{z_truck_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"{{z_truck_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Lease Period Info on Truck",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": [\r\n        {\r\n            \"Lease_Period\": \"{{z_lease_period}}\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/{{z_truck_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"{{z_truck_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Sales Order to Processed",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": [\r\n        {\r\n            \"Status\": \"Lease Processed\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Sales_Orders/{{so_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Sales_Orders",
								"{{so_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Escrow on Truck",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.variables.set(\"today\", moment().format(\"YYYY-MM-DD\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": [\r\n        {\r\n            \"Escrow\": {{SUM(amount)}},\r\n            \"Last_Update_Escrow\": {{today}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/{{z_truck_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"{{z_truck_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Escrow on Truck - TEST",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.variables.set(\"today\", moment().format(\"YYYY-MM-DD\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 1000.98b92c094ca1f0425f11130cb11e39db.a960133765fdd8a6b89793e8aa29e4a8"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": [\r\n        {\r\n            \"Escrow\": 600,\r\n            \"Last_Update_Escrow\": {{today}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/4816208000072394121",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"4816208000072394121"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Property Tax Escrow on Truck",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"pm.variables.set(\"today\", moment().format(\"YYYY-MM-DD\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": [\r\n        {\r\n            \"Property_Tax_Escrow\": {{SUM(gross)}},\r\n            \"Last_Update_Prop_Tax_Escrow\": {{today}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.zohoapis.com/crm/v6/Trucks/{{z_truck_id}}",
							"protocol": "https",
							"host": [
								"www",
								"zohoapis",
								"com"
							],
							"path": [
								"crm",
								"v6",
								"Trucks",
								"{{z_truck_id}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "NetSuite",
			"item": [
				{
					"name": "GET Custom Search - Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"customsearch1037\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script={{custom_search_script_id}}&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "{{custom_search_script_id}}"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Custom Search - Prod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"customsearch1038\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script={{custom_search_script_id}}&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "{{custom_search_script_id}}"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Monthly Loan Financials by VIN",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"customsearch1037\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script={{custom_search_script_id}}&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "{{custom_search_script_id}}"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Customer Lease Info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"customsearch1038\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script={{custom_search_script_id}}&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "{{custom_search_script_id}}"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Open AR CRM Input - Analytics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"customsearch1173\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script={{custom_search_script_id}}&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "{{custom_search_script_id}}"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AR Aging Summary",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"1237\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script={{custom_search_script_id}}&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "{{custom_search_script_id}}"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AP Aging Summary",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"1248\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script={{custom_search_script_id}}&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "{{custom_search_script_id}}"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AP CRM Input - Analytics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"1198\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script={{custom_search_script_id}}&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "{{custom_search_script_id}}"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Customer Remaining Balance Info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"customsearch1048\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script={{custom_search_script_id}}&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "{{custom_search_script_id}}"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Truck Escrow",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"customsearch985\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script={{custom_search_script_id}}&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "{{custom_search_script_id}}"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Yesterday Escrow Detail",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"customsearch1215\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script={{custom_search_script_id}}&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "{{custom_search_script_id}}"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Prior Month Escrow Detail - IMPORT",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"customsearch1214\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script={{custom_search_script_id}}&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "{{custom_search_script_id}}"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Prior Month Escrow Detail - Single Record - dev",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"customsearch1212\",\r\n    \"searchColumn\": \"custcol1\",\r\n    \"searchValue\":\"1FUJHHDR2RLUY0812\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://7936739.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1002&deploy=1",
							"protocol": "https",
							"host": [
								"7936739",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "1002"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Prior Month Escrow Detail - Single Record",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"customsearch1212\",\r\n    \"searchColumn\": \"custcol1\",\r\n    \"searchValue\":\"{{truckVIN}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://7936739.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1002&deploy=1",
							"protocol": "https",
							"host": [
								"7936739",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "1002"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Property Tax Escrow",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Property Tax Escrow - By VIN (CRM Input)\r",
									"if(pm.environment.get(\"enableProd\") === \"true\") {\r",
									"    pm.environment.set(\"prop_escrow_custom_search\",\"customsearch1095\");\r",
									"} else {\r",
									"    pm.environment.set(\"prop_escrow_custom_search\",\"customsearch1095\");\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"customsearch1095\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script={{custom_search_script_id}}&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "{{custom_search_script_id}}"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Customer Info by Zoho ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"customsearch1176\",\r\n    \"searchColumn\": \"externalid\",\r\n    \"searchValue\":\"{{searchValue}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script={{custom_search_col_script_id}}&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "{{custom_search_col_script_id}}"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Customer Info by Zoho ID -TEST",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"searchID\": \"customsearch1176\",\"searchColumn\": \"externalid\",\"searchValue\":\"4816208000000578745\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1016&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "1016"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET NetLessor Lease by SO Num",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"customsearch1178\",\r\n    \"searchColumn\": \"externalid\",\r\n    \"searchValue\":\"{{searchValue}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script={{custom_search_col_script_id}}&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "{{custom_search_col_script_id}}"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET NetLessor Lease by SO Num Test",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"searchID\": \"customsearch1178\",\r\n    \"searchColumn\": \"externalid\",\r\n    \"searchValue\":\"4816208000023323315\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?script={{custom_search_col_script_id}}&deploy=1",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"restlets",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"app",
								"site",
								"hosting",
								"restlet.nl"
							],
							"query": [
								{
									"key": "script",
									"value": "{{custom_search_col_script_id}}"
								},
								{
									"key": "deploy",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Sales Order for SCO Billing",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Get the value of the variable\r",
									"const billAddr1Value = pm.variables.get(\"billing_addr1\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (!billAddr1Value) {\r",
									"    pm.variables.set(\"billing_addr1\",\"\");\r",
									"}\r",
									"\r",
									"// Get the value of the variable\r",
									"const billCity = pm.variables.get(\"billing_city\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (!billCity) {\r",
									"    pm.variables.set(\"billing_city\",\"\");\r",
									"}\r",
									"\r",
									"// Get the value of the variable\r",
									"const billState = pm.variables.get(\"billing_state\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (!billState) {\r",
									"    pm.variables.set(\"billing_state\",\"\");\r",
									"}\r",
									"\r",
									"// Get the value of the variable\r",
									"const billCode = pm.variables.get(\"billing_code\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (!billCode) {\r",
									"    pm.variables.set(\"billing_code\",\"\");\r",
									"}\r",
									"\r",
									"// Get the value of the variable\r",
									"const items = pm.variables.get(\"items\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (items) {\r",
									"    // let itemsJson = JSON.parse(items);\r",
									"    // let modifiedObject = {};\r",
									"    // Object.keys(itemsJson).forEach(key => {\r",
									"    //     let newKey = key.replace(/\\d+/g, '');\r",
									"    //     modifiedObject[newKey] = itemsJson[key];\r",
									"    // });\r",
									"    // console.log(modifiedObject);\r",
									"\r",
									"    let modifiedJson = items.replace(/\\\"item\\d+\\\"/g, match => match.replace(/\\d+/g, ''));\r",
									"    console.log(\"items: \" + modifiedJson);\r",
									"    pm.variables.set(\"items\", modifiedJson);\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"entity\": { \"id\": \"{{lastCustomer}}\" },\r\n\t\"item\": {\r\n\t\t\"items\": {{items}}\r\n\t},\r\n    \"memo\":\"{{memo}}\",\r\n    \"custbody_9997_is_for_ep_eft\":true,\r\n    \"subsidiary\":\"2\",\r\n    \"location\":\"2\",\r\n    \"custbody_esc_created_date\":\"{{invoice_date}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.suitetalk.api.netsuite.com/services/rest/record/v1/salesOrder",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"suitetalk",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"services",
								"rest",
								"record",
								"v1",
								"salesOrder"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Sales Order for SCO/PhysDam - TEST",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Get the value of the variable\r",
									"const billAddr1Value = pm.variables.get(\"billing_addr1\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (!billAddr1Value) {\r",
									"    pm.variables.set(\"billing_addr1\",\"\");\r",
									"}\r",
									"\r",
									"// Get the value of the variable\r",
									"const billCity = pm.variables.get(\"billing_city\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (!billCity) {\r",
									"    pm.variables.set(\"billing_city\",\"\");\r",
									"}\r",
									"\r",
									"// Get the value of the variable\r",
									"const billState = pm.variables.get(\"billing_state\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (!billState) {\r",
									"    pm.variables.set(\"billing_state\",\"\");\r",
									"}\r",
									"\r",
									"// Get the value of the variable\r",
									"const billCode = pm.variables.get(\"billing_code\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (!billCode) {\r",
									"    pm.variables.set(\"billing_code\",\"\");\r",
									"}\r",
									"\r",
									"// Get the value of the variable\r",
									"const items = pm.variables.get(\"items\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (items) {\r",
									"    // let itemsJson = JSON.parse(items);\r",
									"    // let modifiedObject = {};\r",
									"    // Object.keys(itemsJson).forEach(key => {\r",
									"    //     let newKey = key.replace(/\\d+/g, '');\r",
									"    //     modifiedObject[newKey] = itemsJson[key];\r",
									"    // });\r",
									"    // console.log(modifiedObject);\r",
									"\r",
									"    let modifiedJson = items.replace(/\\\"item\\d+\\\"/g, match => match.replace(/\\d+/g, ''));\r",
									"    console.log(\"items: \" + modifiedJson);\r",
									"    pm.variables.set(\"items\", modifiedJson);\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n\t\"entity\": { \"id\": \"{{lastCustomer}}\" },\r\n\t\"item\": {\r\n\t\t\"items\": [{\"item\":{\"id\":\"64\"},\"item_display\":\"Phys Dmg Insurance Non-Leased\",\"rate\":57.69,\"quantity\":1,\"amount\":57.69},{\"item\":{\"id\":\"64\"},\"item_display\":\"Phys Dmg Insurance Non-Leased\",\"rate\":86.54,\"quantity\":1,\"amount\":86.54}]\r\n\t},\r\n    \"memo\":\"PhysDam/NTL Insurance for ZZ_Company2\",\r\n    \"billaddr1\":\"\",\r\n    \"billcity\":\"\",\r\n    \"billstate\":\"\",\r\n    \"billzip\":\"\",\r\n    \"custbody_9997_is_for_ep_eft\":true,\r\n    \"subsidiary\":\"2\",\r\n    \"location\":\"2\",\r\n    \"custbody_esc_created_date\":\"2024-02-02\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.suitetalk.api.netsuite.com/services/rest/record/v1/salesOrder",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"suitetalk",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"services",
								"rest",
								"record",
								"v1",
								"salesOrder"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Sales Order from Invoice",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"entity\": { \"id\": \"{{lastCustomer}}\" },\r\n\t\"item\": {\r\n\t\t\"items\": {{items}}\r\n\t},\r\n    \"otherrefnum\": \"{{so_id}}\",\r\n    \"memo\":\"{{memo}}\",\r\n    \"custbody_9997_is_for_ep_eft\":true,\r\n    \"subsidiary\":\"2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.suitetalk.api.netsuite.com/services/rest/record/v1/salesOrder",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"suitetalk",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"services",
								"rest",
								"record",
								"v1",
								"salesOrder"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Get the value of the variable\r",
									"const billStateValue = pm.variables.get(\"billing_state\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (!billStateValue) {\r",
									"    pm.variables.set(\"billing_state\",\"\");\r",
									"}\r",
									"\r",
									"// Get the value of the variable\r",
									"const billCodeValue = pm.variables.get(\"billing_code\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (!billCodeValue) {\r",
									"    pm.variables.set(\"billing_code\",\"\");\r",
									"}\r",
									"\r",
									"// Get the value of the variable\r",
									"const billAddrValue = pm.variables.get(\"billing_address\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (!billAddrValue) {\r",
									"    pm.variables.set(\"billing_address\",\"\");\r",
									"}\r",
									"\r",
									"// Get the value of the variable\r",
									"const billCityValue = pm.variables.get(\"billing_city\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (!billCityValue) {\r",
									"    pm.variables.set(\"billing_city\",\"\");\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"companyName\": \"{{acct_name}}\",\r\n\t\"addressBook\": {\r\n\t\t\"items\": [{\r\n\t\t\t\"label\": \"{{acct_name}} HQ\",\r\n\t\t\t\"addressBookAddress\": {\r\n\t\t\t\t\"country\": { \"id\": \"US\" },\r\n\t\t\t\t\"state\": \"{{billing_state}}\",\r\n\t\t\t\t\"zip\": \"{{billing_code}}\",\r\n                \"addressee\": \"{{acct_name}}\",\r\n                \"addr1\": \"{{billing_address}}\",\r\n                \"city\": \"{{billing_city}}\",\r\n                \"phone\": \"{{acct_phone}}\"\r\n\t\t\t}\r\n\t\t}]\r\n\t},\r\n    \"externalid\": \"{{zoho_account_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.suitetalk.api.netsuite.com/services/rest/record/v1/Customer",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"suitetalk",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"services",
								"rest",
								"record",
								"v1",
								"Customer"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST NetLessor Payment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Get the value of the variable\r",
									"const wklyPropTaxPmtValue = pm.variables.get(\"Wkly_Property_Tax_Payment\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (!wklyPropTaxPmtValue) {\r",
									"    pm.variables.set(\"Wkly_Property_Tax_Payment\",0);\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"custrecord_lma_lpa_nonls_payment_1\": {{Wkly_Escrow_Payment}},\r\n    \"custrecord_lma_lpa_nonls_payment_2\": 15,\r\n    \"custrecord_lma_lpa_nonls_payment_3\": 8.50,\r\n    \"custrecord_lma_lpa_frequency\": 7,\r\n    \"custrecord_lma_lpa_lease\": \"{{lastLease}}\",\r\n    \"custrecord_lma_lpa_nonls_payment_4\": {{PhysDam_Wkly_Premium}},\r\n    \"custrecord_lma_lpa_nonls_payment_5\": {{Wkly_Property_Tax_Payment}},\r\n    \"custrecord_lma_lpa_effective_date\": \"{{Effective_Date}}\",\r\n    \"custrecord_lma_lpa_payment_amount\": {{Lease_Payment}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.suitetalk.api.netsuite.com/services/rest/record/v1/customrecord_lma_lease_payment",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"suitetalk",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"services",
								"rest",
								"record",
								"v1",
								"customrecord_lma_lease_payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST NetLessor Lease",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" // Define the response body\r",
									"const responseBody = {\r",
									"    \"key\": \"value\"\r",
									"};\r",
									"\r",
									"// Set the response body\r",
									"pm.response.to.have.body(JSON.stringify(responseBody));\r",
									"\r",
									"// Send the response\r",
									"pm.sendRequest({\r",
									"    url: \"https://7936739-sb1.suitetalk.api.netsuite.com/services/rest/record/v1/customrecord_lma_lease\",\r",
									"    method: \"POST\",\r",
									"    body: JSON.stringify(responseBody),\r",
									"    headers: {\r",
									"        \"Content-Type\": \"application/json\"\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Get the value of the variable\r",
									"const ntlValue = pm.variables.get(\"NTL\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (!ntlValue) {\r",
									"    pm.variables.set(\"NTL\",0);\r",
									"}\r",
									"\r",
									"// Get the value of the variable\r",
									"const vinValue = pm.variables.get(\"VIN\");\r",
									"\r",
									"// Check if the variable is empty or null\r",
									"if (!vinValue) {\r",
									"    pm.variables.set(\"VIN\",\"\");\r",
									"}\r",
									"\r",
									"const leaseTypeValue = pm.variables.get(\"Truck_Type\");\r",
									"\r",
									"if(leaseTypeValue) {\r",
									"    if(leaseTypeValue.toUpperCase() == \"TEAM\") {\r",
									"        //Team\r",
									"        pm.variables.set(\"Truck_Type\",\"1\");\r",
									"    } else if(leaseTypeValue.toUpperCase() == \"SOLO\") {\r",
									"        //Solo\r",
									"        pm.variables.set(\"Truck_Type\",\"2\");\r",
									"    } else if(leaseTypeValue.toUpperCase() == \"DAY CAB\") {\r",
									"        //Day Cab\r",
									"        pm.variables.set(\"Truck_Type\",\"3\");\r",
									"    } else if(leaseTypeValue.toUpperCase() == \"RE-FINANCE\") {\r",
									"        //Re-Finance\r",
									"        pm.variables.set(\"Truck_Type\",\"4\");\r",
									"    }\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"entity\": { \"id\": \"{{lastCustomer}}\" },\r\n\t\"altname\": \"{{Subject}}\",\r\n    \"custrecord_lma_ls_type\": \"{{Truck_Type}}\",\r\n    \"custrecord_lma_ls_subsidiary\": \"2\",\r\n    \"custrecord_lma_ls_currency\": \"1\",\r\n    \"custrecord_lma_ls_commencement_date\": \"{{In_Service_Date}}\",\r\n    \"custrecord_lma_ls_term\": {{Terms_Weeks}},\r\n    \"custrecord_fa_ast_vin\": \"{{VIN}}\",\r\n    \"custrecord_fa_ast_residual_value\": {{Residual_Value}},\r\n    \"custrecord_lma_ls_res_value_total_est\": {{Residual_Value}},\r\n    \"custrecord_lma_ls_department\": \"3\",\r\n    \"custrecord_lma_ls_class\": \"{{Class}}\",\r\n    \"custrecord_lma_ls_location\": \"2\",\r\n    \"custrecord_lma_ls_carrying_costs\": {{Leased_Asset_Cost}},\r\n    \"custrecord_lma_ls_lease_res_guarantee\": {{Residual_Value_Guaranteed}},\r\n    \"custrecord_lma_ls_fair_asset_value\": {{Leased_Asset_Fair_Value}},\r\n    \"custrecord_lma_ls_lease_notes\": \"{{Notes}}\",\r\n    \"externalid\": \"{{SO_Num}}\",\r\n    \"custrecord_lma_ls_prepayment\": {{Lease_Prepayments}},\r\n    \"custrecordactual_int_rate\": {{Actual_Interest_Rate}},\r\n    \"custrecordsales_price\": {{Sales_Price}},\r\n    \"custrecord155\": {{NTL}},\r\n    \"custrecord156\": {{PhysDam}},\r\n    \"custrecord_lma_ls_customer\": {{lastCustomer}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ns_acct_url_id}}.suitetalk.api.netsuite.com/services/rest/record/v1/customrecord_lma_lease",
							"protocol": "https",
							"host": [
								"{{ns_acct_url_id}}",
								"suitetalk",
								"api",
								"netsuite",
								"com"
							],
							"path": [
								"services",
								"rest",
								"record",
								"v1",
								"customrecord_lma_lease"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"const cyptojs = require('crypto-js');\r",
							"\r",
							"let tokenClientIDStr = 'prod_ns_token_client_id';\r",
							"let tokenClientSecretStr = 'prod_ns_token_client_secret';\r",
							"let tokenIDStr = 'PROD_NS_TOKEN_ID';\r",
							"let tokenSecretStr = 'PROD_NS_TOKEN_SECRET';\r",
							"let acctIDStr = 'PROD_NS_ACCOUNT_ID';\r",
							"let ns_acct_url_id = \"7936739\";\r",
							"let custom_search_script_id = \"1001\";\r",
							"let custom_search_col_script_id = \"1002\";\r",
							"\r",
							"pm.environment.set(\"ns_acct_url_id\", ns_acct_url_id);\r",
							"pm.environment.set(\"custom_search_script_id\", custom_search_script_id);\r",
							"pm.environment.set(\"custom_search_col_script_id\", custom_search_col_script_id);\r",
							"\r",
							"const oauth_consumer_key = pm.environment.get(tokenClientIDStr);  \r",
							"const oauth_consumer_secret = pm.environment.get(tokenClientSecretStr);\r",
							"const oauth_token_id = pm.environment.get(tokenIDStr);\r",
							"const oauth_token_secret = pm.environment.get(tokenSecretStr);\r",
							"const oauth_account_id = pm.environment.get(acctIDStr); \r",
							"\r",
							"const oauth_signing_key = `${encodeURIComponent(oauth_consumer_secret)}&${encodeURIComponent(oauth_token_secret)}`;\r",
							"\r",
							"const random_source = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
							"let oauth_nonce = '';\r",
							"for (var i = 0; i < 32; i++) {\r",
							"    oauth_nonce += random_source.charAt(Math.floor(Math.random() * random_source.length));\r",
							"}\r",
							"const oauth_nonce_array = cyptojs.enc.Utf8.parse(oauth_nonce);\r",
							"const oauth_nonce_final = encodeURIComponent(cyptojs.enc.Base64.stringify(oauth_nonce_array));\r",
							"\r",
							"const oauth_parameter_string_object = {};\r",
							"\r",
							"oauth_parameter_string_object.oauth_consumer_key = oauth_consumer_key;\r",
							"oauth_parameter_string_object.oauth_token = oauth_token_id;\r",
							"\r",
							"oauth_parameter_string_object.oauth_nonce = oauth_nonce_final;\r",
							"\r",
							"oauth_parameter_string_object.oauth_timestamp = Math.round((new Date()).getTime() / 1000);\r",
							"\r",
							"oauth_parameter_string_object.oauth_signature_method = 'HMAC-SHA256';\r",
							"\r",
							"oauth_parameter_string_object.oauth_version = '1.0';\r",
							"\r",
							"const oauth_authorization_header_object = {};\r",
							"for (var key in oauth_parameter_string_object) {\r",
							"    oauth_authorization_header_object[key] = oauth_parameter_string_object[key];\r",
							"}\r",
							"\r",
							"oauth_authorization_header_object.realm = oauth_account_id;\r",
							"\r",
							"const url_query_string = pm.request.url.getQueryString({  // Postman method to get query string\r",
							"    ignoreDisabled: true\r",
							"});\r",
							"console.log(\"url query string \" + url_query_string);\r",
							"let url_query_string_array = [];\r",
							"\r",
							"if (url_query_string != \"\"){\r",
							"    url_query_string_array = url_query_string.split('&');\r",
							"}\r",
							"\r",
							"let url_query_string_object = {};\r",
							"if (url_query_string !== \"\") {\r",
							"    url_query_string_object = JSON.parse(`{\"${url_query_string.replace(/&/g, '\",\"').replace(/=/g,'\":\"')}\"}`, function(key, value) {return key === \"\" ? value : encodeURIComponent(value)});\r",
							"}\r",
							"\r",
							"// parse request.params\r",
							"for (var key in url_query_string_object) {;\r",
							"    if(url_query_string_object[key] == \"%7B%7Bcustom_search_script_id%7D%7D\") {\r",
							"        url_query_string_object[key] = custom_search_script_id;\r",
							"    } else if (url_query_string_object[key] == \"%7B%7Bcustom_search_col_script_id%7D%7D\") {\r",
							"        url_query_string_object[key] = custom_search_col_script_id;\r",
							"    }\r",
							"    oauth_parameter_string_object[key] = url_query_string_object[key];\r",
							"    \r",
							"}\r",
							"\r",
							"// sort object by key\r",
							"const oauth_parameter_string_object_ordered = {};\r",
							"Object.keys(oauth_parameter_string_object).sort().forEach(function(key) {\r",
							"    oauth_parameter_string_object_ordered[key] = oauth_parameter_string_object[key];\r",
							"});\r",
							"\r",
							"// convert object into array\r",
							"const oauth_parameter_string_array = [];\r",
							"for (var key in oauth_parameter_string_object_ordered) {\r",
							"    oauth_parameter_string_array.push(`${key}=${oauth_parameter_string_object_ordered[key]}`);\r",
							"}\r",
							"\r",
							"// generate parameter string\r",
							"const oauth_parameter_string = oauth_parameter_string_array.join('&');\r",
							"\r",
							"let base_host = pm.request.url.getOAuth1BaseUrl();\r",
							"console.log(\"base host \" + base_host);\r",
							"let regexp = /{{(.*?)}}/g;\r",
							"while (result = regexp.exec(base_host)) {\r",
							"    let value = pm.environment.get(result[1]);\r",
							"    base_host = base_host.replace(new RegExp(`{{${result[1]}}}`, 'g'), value);\r",
							"}\r",
							"\r",
							"const oauth_base_string = `${pm.request.method}&${encodeURIComponent(base_host)}&${encodeURIComponent(oauth_parameter_string)}`;\r",
							"let oauth_signature = cyptojs.HmacSHA256(oauth_base_string, oauth_signing_key).toString(cyptojs.enc.Base64);\r",
							"oauth_authorization_header_object.oauth_signature = encodeURIComponent(oauth_signature);\r",
							"\r",
							"// convert object into array (for Authorization header string)\r",
							"const oauth_authorization_header_array = [];\r",
							"for (var key in oauth_authorization_header_object) {\r",
							"    oauth_authorization_header_array.push(`${key}=\"${oauth_authorization_header_object[key]}\"`);\r",
							"}\r",
							"\r",
							"const oauth_authorization_header = oauth_authorization_header_array.join(', ');\r",
							"\r",
							"// generate Authorization header, FINALLY!\r",
							"pm.request.headers.add({\r",
							"    key: 'Authorization',\r",
							"    value: 'OAuth ' + oauth_authorization_header\r",
							"});\r",
							"\r",
							"// Escape URI parameters using encodeURIComponent => RFC3986\r",
							"// This is encoding the query string params in the request.\r",
							"if (url_query_string_array.length !== 0) {\r",
							"    let request_parameter_array = [];\r",
							"    for (var key in url_query_string_object) {\r",
							"        request_parameter_array.push(key + '=' + url_query_string_object[key]);\r",
							"    }\r",
							"    const request_parameter_string = request_parameter_array.join('&');\r",
							"\r",
							"    pm.request.url = pm.request.url.getOAuth1BaseUrl() + \"?\" + request_parameter_string;\r",
							"}\r",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Microsoft",
			"item": [
				{
					"name": "POST Microsoft Access Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var accessToken = jsonData.access_token;\r",
									"pm.environment.set(\"microsoft_access_token\",accessToken);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{prod_microsoft_client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{prod_microsoft_client_secret}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "https://graph.microsoft.com/.default openid offline_access ",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{microsoft_tenant_id}}/oauth2/v2.0/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{microsoft_tenant_id}}",
								"oauth2",
								"v2.0",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Send Mail",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{microsoft_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"message\": {\r\n    \"subject\": \"{{flow_name}} Failed to Run\",\r\n    \"body\": {\r\n      \"contentType\": \"html\",\r\n      \"content\": \"<html>{{flow_name}} flow failed to run with the following request: {{request_name}}.<br /><br /></html>\"\r\n    },\r\n    \"toRecipients\": [\r\n      {\r\n        \"emailAddress\": {\r\n          \"address\": \"lgiuffre@teamrel.com\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"saveToSentItems\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://graph.microsoft.com/v1.0/users/{{microsoft_user_id}}/sendMail",
							"protocol": "https",
							"host": [
								"graph",
								"microsoft",
								"com"
							],
							"path": [
								"v1.0",
								"users",
								"{{microsoft_user_id}}",
								"sendMail"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Create Account Name Folder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{microsoft_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"{{acctName}}\",\r\n  \"folder\": { },\r\n  \"@microsoft.graph.conflictBehavior\": \"rename\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://graph.microsoft.com/v1.0/Drives/{{microsoft_prod_site_id}}/root:/Accounts:/children",
							"protocol": "https",
							"host": [
								"graph",
								"microsoft",
								"com"
							],
							"path": [
								"v1.0",
								"Drives",
								"{{microsoft_prod_site_id}}",
								"root:",
								"Accounts:",
								"children"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Gather CSV Data and Upload",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// var body = `VIN,Date,Memo,Amount,Type\\r\\n3AKJHTDV6NDNB8959,6/6/2024,LR00186 - Monthly Amortization Entry,100.00,Custom\\r\\n3AKJHTDV6NDNB8959,6/13/2024,LR00186 - Monthly Amortization Entry,100.00,Custom\\r\\n3AKJHTDV6NDNB8959,6/20/2024,LR00186 - Monthly Amortization Entry,100.00,Custom\\r\\n3AKJHTDV6NDNB8959,6/27/2024,LR00186 - Monthly Amortization Entry,100.00,Custom\\r\\n`;\r",
									"// pm.variables.set(\"bodyToSend\", body);\r",
									"\r",
									"var requestGetMSToken = {\r",
									"    url: `https://login.microsoftonline.com/${pm.environment.get(\"microsoft_tenant_id\")}/oauth2/v2.0/token`,\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"        'Content-Type': 'application/x-www-form-urlencoded'\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'urlencoded',\r",
									"        urlencoded: [\r",
									"            { key: 'grant_type', value: 'client_credentials' },\r",
									"            { key: 'client_id', value: pm.environment.get(\"prod_microsoft_client_id\") },\r",
									"            { key: 'client_secret', value: pm.environment.get(\"prod_microsoft_client_secret\") },\r",
									"            { key: 'scope', value: 'https://graph.microsoft.com/.default openid offline_access' }\r",
									"        ]\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.sendRequest(requestGetMSToken, function (err, tokenMSResponse) {\r",
									"    if (err) {\r",
									"        console.error('Error:', err);\r",
									"        return;\r",
									"    }\r",
									"    console.log('Response: ', tokenMSResponse.json());\r",
									"    var parsedToken = tokenMSResponse.json();\r",
									"    // console.log(\"ms access token: \",parsedToken);\r",
									"    var accessToken = parsedToken.access_token;\r",
									"    pm.variables.set(\"microsoft_access_token\",accessToken);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"console.log(\"data: \" + JSON.stringify(jsonData.data));\r",
									"let data = jsonData.data;\r",
									"let csvData = data.replace(/\\\\n/g, '\\n');\r",
									"console.log(\"csvData: \" + csvData);\r",
									"var requestPutCSV = {\r",
									"    url: pm.variables.get(\"url\"),\r",
									"    method: 'PUT',\r",
									"    header: {\r",
									"        \"Authorization\": \"Bearer \" + pm.variables.get(\"microsoft_access_token\"),\r",
									"        'Content-Type': 'text/csv'\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: csvData\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.sendRequest(requestPutCSV, function (err, putCSVResponse) {\r",
									"    if (err) {\r",
									"        console.error('Error sending request:', err);\r",
									"    } else {\r",
									"        console.log('put CSV response: ', putCSVResponse.json());\r",
									"    }\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{bodyToSend}}",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://postman-echo.com/post?url={{url}}",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"post"
							],
							"query": [
								{
									"key": "url",
									"value": "{{url}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Gather CSV Data and Upload test",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"console.log(\"data: \" + JSON.stringify(jsonData.data));\r",
									"let data = jsonData.data;\r",
									"let csvData = data.replace(/\\\\n/g, '\\n');\r",
									"console.log(\"csvData: \" + csvData);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{bodyToSend}}",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://postman-echo.com/post",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Site ID from Sharepoint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{microsoft_access_token}}"
							}
						],
						"url": {
							"raw": "https://graph.microsoft.com/v1.0/sites/teamrelcom.sharepoint.com",
							"protocol": "https",
							"host": [
								"graph",
								"microsoft",
								"com"
							],
							"path": [
								"v1.0",
								"sites",
								"teamrelcom.sharepoint.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET List of Drives from IT",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{microsoft_access_token}}"
							}
						],
						"url": {
							"raw": "https://graph.microsoft.com/v1.0/sites/{{microsoft_it_group_id}}/Drives",
							"protocol": "https",
							"host": [
								"graph",
								"microsoft",
								"com"
							],
							"path": [
								"v1.0",
								"sites",
								"{{microsoft_it_group_id}}",
								"Drives"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET List of Drives from Contracts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{microsoft_access_token}}"
							}
						],
						"url": {
							"raw": "https://graph.microsoft.com/v1.0/sites/{{microsoft_contracts_group_id}}/Drives",
							"protocol": "https",
							"host": [
								"graph",
								"microsoft",
								"com"
							],
							"path": [
								"v1.0",
								"sites",
								"{{microsoft_contracts_group_id}}",
								"Drives"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Folder ID from Test FedEx Folder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{microsoft_access_token}}"
							}
						],
						"url": {
							"raw": "https://graph.microsoft.com/v1.0/Drives/{{microsoft_prod_site_id}}/root:/FedEx",
							"protocol": "https",
							"host": [
								"graph",
								"microsoft",
								"com"
							],
							"path": [
								"v1.0",
								"Drives",
								"{{microsoft_prod_site_id}}",
								"root:",
								"FedEx"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Folder ID from Accounts Folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{microsoft_access_token}}"
							}
						],
						"url": {
							"raw": "https://graph.microsoft.com/v1.0/Drives/{{microsoft_prod_site_id}}/root:/Accounts",
							"protocol": "https",
							"host": [
								"graph",
								"microsoft",
								"com"
							],
							"path": [
								"v1.0",
								"Drives",
								"{{microsoft_prod_site_id}}",
								"root:",
								"Accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Search by VIN in Contracts Site",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{microsoft_access_token}}"
							}
						],
						"url": {
							"raw": "https://graph.microsoft.com/v1.0/Drives/{{microsoft_prod_site_id}}/root:/Accounts:/search(q='{zztest-truck-record}')",
							"protocol": "https",
							"host": [
								"graph",
								"microsoft",
								"com"
							],
							"path": [
								"v1.0",
								"Drives",
								"{{microsoft_prod_site_id}}",
								"root:",
								"Accounts:",
								"search(q='{zztest-truck-record}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Search by Name in Accounts Folder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{microsoft_access_token}}"
							}
						],
						"url": {
							"raw": "https://graph.microsoft.com/v1.0/Drives/{{microsoft_prod_site_id}}/root:/Accounts:/search(q='{{{acctName}}}')",
							"protocol": "https",
							"host": [
								"graph",
								"microsoft",
								"com"
							],
							"path": [
								"v1.0",
								"Drives",
								"{{microsoft_prod_site_id}}",
								"root:",
								"Accounts:",
								"search(q='{{{acctName}}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Site ID of Group - General IT",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{microsoft_access_token}}"
							}
						],
						"url": {
							"raw": "https://graph.microsoft.com/v1.0/groups/{{microsoft_general_it_group_id}}/sites/root",
							"protocol": "https",
							"host": [
								"graph",
								"microsoft",
								"com"
							],
							"path": [
								"v1.0",
								"groups",
								"{{microsoft_general_it_group_id}}",
								"sites",
								"root"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET List of Groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{microsoft_access_token}}"
							}
						],
						"url": {
							"raw": "https://graph.microsoft.com/v1.0/groups",
							"protocol": "https",
							"host": [
								"graph",
								"microsoft",
								"com"
							],
							"path": [
								"v1.0",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET List of Sites",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{microsoft_access_token}}"
							}
						],
						"url": {
							"raw": "https://graph.microsoft.com/v1.0/sites",
							"protocol": "https",
							"host": [
								"graph",
								"microsoft",
								"com"
							],
							"path": [
								"v1.0",
								"sites"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CSV File Contents",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// var body = `VIN,Date,Memo,Amount,Type\\r\\n3AKJHTDV6NDNB8959,6/6/2024,LR00186 - Monthly Amortization Entry,100.00,Custom\\r\\n3AKJHTDV6NDNB8959,6/13/2024,LR00186 - Monthly Amortization Entry,100.00,Custom\\r\\n3AKJHTDV6NDNB8959,6/20/2024,LR00186 - Monthly Amortization Entry,100.00,Custom\\r\\n3AKJHTDV6NDNB8959,6/27/2024,LR00186 - Monthly Amortization Entry,100.00,Custom\\r\\n`;\r",
									"// pm.variables.set(\"bodyToSend\", body);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Save response to an environment variable\r",
									"let fileContent = pm.response.text();\r",
									"pm.environment.set(\"fileContent\", fileContent);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{microsoft_access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "text/csv",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://graph.microsoft.com/v1.0/Drives/{{microsoft_prod_site_id}}/items/{{microsoft_prod_accounts_path}}:/{{filename}}:/content",
							"protocol": "https",
							"host": [
								"graph",
								"microsoft",
								"com"
							],
							"path": [
								"v1.0",
								"Drives",
								"{{microsoft_prod_site_id}}",
								"items",
								"{{microsoft_prod_accounts_path}}:",
								"{{filename}}:",
								"content"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Upload File to Accounts - TEST",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"bodyToUpload\", pm.environment.get(\"requestBody\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{microsoft_access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "text/csv",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{bodyToUpload}}",
							"options": {
								"raw": {
									"language": "javascript"
								}
							}
						},
						"url": {
							"raw": "https://graph.microsoft.com/v1.0/Drives/{{microsoft_prod_site_id}}/items/{{microsoft_prod_accounts_path}}:/{{filename}}:/content",
							"protocol": "https",
							"host": [
								"graph",
								"microsoft",
								"com"
							],
							"path": [
								"v1.0",
								"Drives",
								"{{microsoft_prod_site_id}}",
								"items",
								"{{microsoft_prod_accounts_path}}:",
								"{{filename}}:",
								"content"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Upload File to Accounts",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log(\"body in pre-request \" + pm.request.body);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{microsoft_access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "text/csv",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{bodyToSend}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://graph.microsoft.com/v1.0/Drives/{{microsoft_prod_site_id}}/items/{{microsoft_prod_accounts_path}}:/{{filename}}:/content",
							"protocol": "https",
							"host": [
								"graph",
								"microsoft",
								"com"
							],
							"path": [
								"v1.0",
								"Drives",
								"{{microsoft_prod_site_id}}",
								"items",
								"{{microsoft_prod_accounts_path}}:",
								"{{filename}}:",
								"content"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "authUrl",
						"value": "https://login.microsoftonline.com/874315e0-a2fe-40f8-9587-a887d266e968/oauth2/v2.0/authorize?access_type=offline&prompt=consent",
						"type": "string"
					},
					{
						"key": "refreshTokenUrl",
						"value": "https://login.microsoftonline.com/874315e0-a2fe-40f8-9587-a887d266e968/oauth2/v2.0/token",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://login.microsoftonline.com/874315e0-a2fe-40f8-9587-a887d266e968/oauth2/v2.0/token",
						"type": "string"
					},
					{
						"key": "client_authentication",
						"value": "body",
						"type": "string"
					},
					{
						"key": "grant_type",
						"value": "authorization_code",
						"type": "string"
					},
					{
						"key": "redirect_uri",
						"value": "https://oauth.pstmn.io/v1/browser-callback",
						"type": "string"
					},
					{
						"key": "scope",
						"value": "https://graph.microsoft.com/.default",
						"type": "string"
					},
					{
						"key": "state",
						"value": "",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "{{prod_microsoft_client_secret}}",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "{{prod_microsoft_client_id}}",
						"type": "string"
					},
					{
						"key": "tokenName",
						"value": "Microsoft Production",
						"type": "string"
					},
					{
						"key": "refreshRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "tokenRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "authRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "challengeAlgorithm",
						"value": "S256",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Postman",
			"item": [
				{
					"name": "Create Webhook",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{postman_x_api_key}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-API-Key",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api.v10+json",
								"type": "text"
							},
							{
								"key": "x-workspace-id",
								"value": "{{postman_workspace_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"webhook\":{\r\n        \"name\": \"Refresh Access Token\",\r\n        \"collection\": {{postman_collection_id}}\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.getpostman.com/webhooks?workspace={{postman_workspace_id}}",
							"protocol": "https",
							"host": [
								"api",
								"getpostman",
								"com"
							],
							"path": [
								"webhooks"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{postman_workspace_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Update CSV Content in Environment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"const csvData = jsonData.data;\r",
									"console.log(\"csvData \" + csvData);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/csv",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{csvContent}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://postman-echo.com/post",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Zoho Analytics",
			"item": [
				{
					"name": "Generate Access Token and Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseCode.code === 200)\r",
									"{\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"    pm.environment.set(\"prod-refresh-token-analytics\", jsonData.refresh_token);\r",
									"    pm.environment.set(\"prod-access-token-analytics\", jsonData.access_token);\r",
									"    pm.environment.set(\"prod-expiry-time-analytics\", Date.now() + parseInt(jsonData.expires_in));\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://accounts.zoho.com/oauth/v2/token?code=1000.ea6f93acc83e15178ae39b4126027860.1256dc61e4a80bce8178a57fc02d6893&client_id={{prod_zoho_client_id}}&client_secret={{prod_zoho_client_secret}}&grant_type=authorization_code",
							"protocol": "https",
							"host": [
								"accounts",
								"zoho",
								"com"
							],
							"path": [
								"oauth",
								"v2",
								"token"
							],
							"query": [
								{
									"key": "code",
									"value": "1000.ea6f93acc83e15178ae39b4126027860.1256dc61e4a80bce8178a57fc02d6893"
								},
								{
									"key": "client_id",
									"value": "{{prod_zoho_client_id}}"
								},
								{
									"key": "client_secret",
									"value": "{{prod_zoho_client_secret}}"
								},
								{
									"key": "grant_type",
									"value": "authorization_code"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Access Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"analytics_refresh_token\", pm.environment.get(\"prod-refresh-token-analytics\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"zoho_analytics_token\",jsonData.access_token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://accounts.zoho.com/oauth/v2/token?refresh_token={{prod-refresh-token-analytics}}&client_id={{prod_zoho_client_id}}&client_secret={{prod_zoho_client_secret}}&grant_type=refresh_token",
							"protocol": "https",
							"host": [
								"accounts",
								"zoho",
								"com"
							],
							"path": [
								"oauth",
								"v2",
								"token"
							],
							"query": [
								{
									"key": "refresh_token",
									"value": "{{prod-refresh-token-analytics}}"
								},
								{
									"key": "client_id",
									"value": "{{prod_zoho_client_id}}"
								},
								{
									"key": "client_secret",
									"value": "{{prod_zoho_client_secret}}"
								},
								{
									"key": "grant_type",
									"value": "refresh_token"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Row in NetSuite AR",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "ZANALYTICS-ORGID",
								"value": "{{zoho_analytics_org_id}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{analytics-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://analyticsapi.zoho.com/restapi/v2/workspaces/{{zoho_analytics_workspace_id}}/views/{{zoho_analytics_netsuite_ar_view_id}}/rows?CONFIG={{config}}",
							"protocol": "https",
							"host": [
								"analyticsapi",
								"zoho",
								"com"
							],
							"path": [
								"restapi",
								"v2",
								"workspaces",
								"{{zoho_analytics_workspace_id}}",
								"views",
								"{{zoho_analytics_netsuite_ar_view_id}}",
								"rows"
							],
							"query": [
								{
									"key": "CONFIG",
									"value": "{{config}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Row in AR Aging Summary",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "ZANALYTICS-ORGID",
								"value": "{{zoho_analytics_org_id}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{analytics-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://analyticsapi.zoho.com/restapi/v2/workspaces/{{zoho_analytics_workspace_id}}/views/{{zoho_analytics_netsuite_ar_view_id}}/rows?CONFIG={{config}}",
							"protocol": "https",
							"host": [
								"analyticsapi",
								"zoho",
								"com"
							],
							"path": [
								"restapi",
								"v2",
								"workspaces",
								"{{zoho_analytics_workspace_id}}",
								"views",
								"{{zoho_analytics_netsuite_ar_view_id}}",
								"rows"
							],
							"query": [
								{
									"key": "CONFIG",
									"value": "{{config}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Row in AP Aging Summary",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "ZANALYTICS-ORGID",
								"value": "{{zoho_analytics_org_id}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{analytics-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://analyticsapi.zoho.com/restapi/v2/workspaces/{{zoho_analytics_workspace_id}}/views/{{zoho_analytics_netsuite_ar_view_id}}/rows?CONFIG={{config}}",
							"protocol": "https",
							"host": [
								"analyticsapi",
								"zoho",
								"com"
							],
							"path": [
								"restapi",
								"v2",
								"workspaces",
								"{{zoho_analytics_workspace_id}}",
								"views",
								"{{zoho_analytics_netsuite_ar_view_id}}",
								"rows"
							],
							"query": [
								{
									"key": "CONFIG",
									"value": "{{config}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Row in NetSuite AP",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "ZANALYTICS-ORGID",
								"value": "{{zoho_analytics_org_id}}"
							},
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{analytics-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://analyticsapi.zoho.com/restapi/v2/workspaces/{{zoho_analytics_workspace_id}}/views/{{zoho_analytics_netsuite_ap_view_id}}/rows?CONFIG={{config}}",
							"protocol": "https",
							"host": [
								"analyticsapi",
								"zoho",
								"com"
							],
							"path": [
								"restapi",
								"v2",
								"workspaces",
								"{{zoho_analytics_workspace_id}}",
								"views",
								"{{zoho_analytics_netsuite_ap_view_id}}",
								"rows"
							],
							"query": [
								{
									"key": "CONFIG",
									"value": "{{config}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Row in Postman Escrow Extract",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "ZANALYTICS-ORGID",
								"value": "{{zoho_analytics_org_id}}"
							},
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{analytics-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://analyticsapi.zoho.com/restapi/v2/workspaces/{{zoho_analytics_workspace_id}}/views/{{zoho_analytics_pm_escrow_extract_view_id}}/rows?CONFIG={{config}}",
							"protocol": "https",
							"host": [
								"analyticsapi",
								"zoho",
								"com"
							],
							"path": [
								"restapi",
								"v2",
								"workspaces",
								"{{zoho_analytics_workspace_id}}",
								"views",
								"{{zoho_analytics_pm_escrow_extract_view_id}}",
								"rows"
							],
							"query": [
								{
									"key": "CONFIG",
									"value": "{{config}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Row - Test",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');\r",
									"let today = moment().format(\"YYYY-MM-DD\");\r",
									"\r",
									"let jsonObj = {\r",
									"  \"columns\": {\r",
									"    \"PD Creation Date\": today\r",
									"  },\r",
									"  \"criteria\": \"\\\"tblLeaseTimelinessKPIs\\\".\\\"Account Name\\\"='Daimler'\"\r",
									"};\r",
									"\r",
									"let jsonString = JSON.stringify(jsonObj);\r",
									"console.log(\"jsonString: \" + jsonString);\r",
									"let encodedStr = encodeURIComponent(jsonString);\r",
									"console.log(\"encoded json: \" + encodedStr);\r",
									"pm.variables.set(\"config\", encodedStr);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "ZANALYTICS-ORGID",
								"value": "{{zoho_analytics_org_id}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{zoho_analytics_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://analyticsapi.zoho.com/restapi/v2/workspaces/{{zoho_analytics_test_workspace}}/views/{{zoho_analytics_test_view_id}}/rows?CONFIG={{config}}",
							"protocol": "https",
							"host": [
								"analyticsapi",
								"zoho",
								"com"
							],
							"path": [
								"restapi",
								"v2",
								"workspaces",
								"{{zoho_analytics_test_workspace}}",
								"views",
								"{{zoho_analytics_test_view_id}}",
								"rows"
							],
							"query": [
								{
									"key": "CONFIG",
									"value": "{{config}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete All Rows in NetSuiteAR",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "ZANALYTICS-ORGID",
								"value": "{{zoho_analytics_org_id}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{analytics-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://analyticsapi.zoho.com/restapi/v2/workspaces/{{zoho_analytics_workspace_id}}/views/{{zoho_analytics_netsuite_ar_view_id}}/rows?CONFIG={{config}}",
							"protocol": "https",
							"host": [
								"analyticsapi",
								"zoho",
								"com"
							],
							"path": [
								"restapi",
								"v2",
								"workspaces",
								"{{zoho_analytics_workspace_id}}",
								"views",
								"{{zoho_analytics_netsuite_ar_view_id}}",
								"rows"
							],
							"query": [
								{
									"key": "CONFIG",
									"value": "{{config}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete All Rows in NetSuiteAP",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let jsonObj = {\r",
									"  \"deleteAllRows\": \"true\"\r",
									"};\r",
									"\r",
									"let jsonString = JSON.stringify(jsonObj);\r",
									"console.log(\"jsonString: \" + jsonString);\r",
									"let encodedStr = encodeURIComponent(jsonString);\r",
									"console.log(\"encoded json: \" + encodedStr);\r",
									"pm.variables.set(\"config\", encodedStr);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "ZANALYTICS-ORGID",
								"value": "769480731"
							},
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{analytics-token}}"
							}
						],
						"url": {
							"raw": "https://analyticsapi.zoho.com/restapi/v2/workspaces/{{zoho_analytics_workspace_id}}/views/{{zoho_analytics_netsuite_ap_view_id}}/rows?CONFIG={{config}}",
							"protocol": "https",
							"host": [
								"analyticsapi",
								"zoho",
								"com"
							],
							"path": [
								"restapi",
								"v2",
								"workspaces",
								"{{zoho_analytics_workspace_id}}",
								"views",
								"{{zoho_analytics_netsuite_ap_view_id}}",
								"rows"
							],
							"query": [
								{
									"key": "CONFIG",
									"value": "{{config}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete All Rows in Postman Escrow Extract",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "ZANALYTICS-ORGID",
								"value": "769480731"
							},
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{analytics-token}}"
							}
						],
						"url": {
							"raw": "https://analyticsapi.zoho.com/restapi/v2/workspaces/{{zoho_analytics_workspace_id}}/views/{{zoho_analytics_pm_escrow_extract_view_id}}/rows?CONFIG={{config}}",
							"protocol": "https",
							"host": [
								"analyticsapi",
								"zoho",
								"com"
							],
							"path": [
								"restapi",
								"v2",
								"workspaces",
								"{{zoho_analytics_workspace_id}}",
								"views",
								"{{zoho_analytics_pm_escrow_extract_view_id}}",
								"rows"
							],
							"query": [
								{
									"key": "CONFIG",
									"value": "{{config}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Zonar",
			"item": [
				{
					"name": "Jbus Trip Report",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const currentDate = new Date();\r",
									"const endOfDayToday = new Date(currentDate.setHours(23, 59, 59, 999));\r",
									"\r",
									"// Calculate the start of yesterday\r",
									"const startOfYesterday = new Date(currentDate);\r",
									"startOfYesterday.setDate(currentDate.getDate() - 1);\r",
									"startOfYesterday.setHours(0, 0, 0, 0);\r",
									"\r",
									"const starttime = Math.floor(startOfYesterday.getTime() / 1000);\r",
									"const endtime = Math.floor(endOfDayToday.getTime() / 1000);\r",
									"\r",
									"pm.environment.set(\"starttime\", starttime.toString());\r",
									"pm.environment.set(\"endtime\", endtime.toString());\r",
									"\r",
									"// console.log(\"starttime: \" + starttime.toString());\r",
									"// console.log(\"endtime: \" + endtime.toString());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://omi.zonarsystems.net/interface.php?action=showopen&operation=jbustrip&format=xml&start={{starttime}}&end={{endtime}}&customer={{zonar_customer_id}}&username={{zonar_u}}&password={{zonar_p}}&target={{zonar_truck_vin}}&reqtype=vin&logvers=1",
							"protocol": "https",
							"host": [
								"omi",
								"zonarsystems",
								"net"
							],
							"path": [
								"interface.php"
							],
							"query": [
								{
									"key": "action",
									"value": "showopen"
								},
								{
									"key": "operation",
									"value": "jbustrip"
								},
								{
									"key": "format",
									"value": "xml"
								},
								{
									"key": "start",
									"value": "{{starttime}}"
								},
								{
									"key": "end",
									"value": "{{endtime}}"
								},
								{
									"key": "customer",
									"value": "{{zonar_customer_id}}"
								},
								{
									"key": "username",
									"value": "{{zonar_u}}"
								},
								{
									"key": "password",
									"value": "{{zonar_p}}"
								},
								{
									"key": "target",
									"value": "{{zonar_truck_vin}}"
								},
								{
									"key": "reqtype",
									"value": "vin"
								},
								{
									"key": "logvers",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Jbus Trip Report - Last 7 Days",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// const currentDate = new Date();\r",
									"// const endOfDayToday = new Date(currentDate.setHours(23, 59, 59, 999));\r",
									"\r",
									"// // Calculate the start of 7 days prior\r",
									"// const startOfPriorPeriod = new Date(currentDate);\r",
									"// startOfPriorPeriod.setDate(currentDate.getDate() - 7);\r",
									"// startOfPriorPeriod.setHours(0, 0, 0, 0);\r",
									"\r",
									"// const starttime = Math.floor(startOfPriorPeriod.getTime() / 1000);\r",
									"// const endtime = Math.floor(endOfDayToday.getTime() / 1000);\r",
									"\r",
									"// pm.environment.set(\"starttime\", starttime.toString());\r",
									"// pm.environment.set(\"endtime\", endtime.toString());\r",
									"\r",
									"// console.log(\"starttime: \" + starttime.toString());\r",
									"// console.log(\"endtime: \" + endtime.toString());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://omi.zonarsystems.net/interface.php?action=showopen&operation=jbustrip&format=xml&start={{starttime}}&end={{endtime}}&customer={{zonar_customer_id}}&username={{zonar_u}}&password={{zonar_p}}&target={{zonar_truck_vin}}&reqtype=vin&logvers=1",
							"protocol": "https",
							"host": [
								"omi",
								"zonarsystems",
								"net"
							],
							"path": [
								"interface.php"
							],
							"query": [
								{
									"key": "action",
									"value": "showopen"
								},
								{
									"key": "operation",
									"value": "jbustrip"
								},
								{
									"key": "format",
									"value": "xml"
								},
								{
									"key": "start",
									"value": "{{starttime}}"
								},
								{
									"key": "end",
									"value": "{{endtime}}"
								},
								{
									"key": "customer",
									"value": "{{zonar_customer_id}}"
								},
								{
									"key": "username",
									"value": "{{zonar_u}}"
								},
								{
									"key": "password",
									"value": "{{zonar_p}}"
								},
								{
									"key": "target",
									"value": "{{zonar_truck_vin}}"
								},
								{
									"key": "reqtype",
									"value": "vin"
								},
								{
									"key": "logvers",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Jbus Trip Report - Since EOL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Retrieve the XML response body\r",
									"var xmlResponse = pm.response.text();\r",
									"\r",
									"// Convert the XML response to JSON\r",
									"var jsonResponse = xml2Json(xmlResponse);\r",
									"\r",
									"// Log the JSON response to the Postman console for debugging\r",
									"console.log(jsonResponse);\r",
									"\r",
									"// Optionally, you can set an environment or global variable with the JSON response\r",
									"pm.environment.set(\"jsonResponse\", JSON.stringify(jsonResponse));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://omi.zonarsystems.net/interface.php?action=showopen&operation=jbustrip&format=xml&start={{starttime}}&end={{endtime}}&customer={{zonar_customer_id}}&username={{zonar_u}}&password={{zonar_p}}&target={{zonar_truck_vin}}&reqtype=vin&logvers=1",
							"protocol": "https",
							"host": [
								"omi",
								"zonarsystems",
								"net"
							],
							"path": [
								"interface.php"
							],
							"query": [
								{
									"key": "action",
									"value": "showopen"
								},
								{
									"key": "operation",
									"value": "jbustrip"
								},
								{
									"key": "format",
									"value": "xml"
								},
								{
									"key": "start",
									"value": "{{starttime}}"
								},
								{
									"key": "end",
									"value": "{{endtime}}"
								},
								{
									"key": "customer",
									"value": "{{zonar_customer_id}}"
								},
								{
									"key": "username",
									"value": "{{zonar_u}}"
								},
								{
									"key": "password",
									"value": "{{zonar_p}}"
								},
								{
									"key": "target",
									"value": "{{zonar_truck_vin}}"
								},
								{
									"key": "reqtype",
									"value": "vin"
								},
								{
									"key": "logvers",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Jbus Trip Report - Test",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const currentDate = new Date();\r",
									"const endOfDayToday = new Date(currentDate.setHours(23, 59, 59, 999));\r",
									"\r",
									"// Calculate the start of 7 days prior\r",
									"const startOfPriorPeriod = new Date(currentDate);\r",
									"startOfPriorPeriod.setDate(currentDate.getDate() - 7);\r",
									"startOfPriorPeriod.setHours(0, 0, 0, 0);\r",
									"\r",
									"const starttime = Math.floor(startOfPriorPeriod.getTime() / 1000);\r",
									"const endtime = Math.floor(endOfDayToday.getTime() / 1000);\r",
									"\r",
									"pm.environment.set(\"starttime\", starttime.toString());\r",
									"pm.environment.set(\"endtime\", endtime.toString());\r",
									"\r",
									"pm.environment.set(\"zonar_truck_vin\", \"3HSDZAPR5NN497151\");\r",
									"\r",
									"console.log(\"starttime: \" + starttime.toString());\r",
									"console.log(\"endtime: \" + endtime.toString());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://omi.zonarsystems.net/interface.php?action=showopen&operation=jbustrip&format=xml&start={{starttime}}&end={{endtime}}&customer={{zonar_customer_id}}&username={{zonar_u}}&password={{zonar_p}}&target={{zonar_truck_vin}}&reqtype=vin&logvers=1",
							"protocol": "https",
							"host": [
								"omi",
								"zonarsystems",
								"net"
							],
							"path": [
								"interface.php"
							],
							"query": [
								{
									"key": "action",
									"value": "showopen"
								},
								{
									"key": "operation",
									"value": "jbustrip"
								},
								{
									"key": "format",
									"value": "xml"
								},
								{
									"key": "start",
									"value": "{{starttime}}"
								},
								{
									"key": "end",
									"value": "{{endtime}}"
								},
								{
									"key": "customer",
									"value": "{{zonar_customer_id}}"
								},
								{
									"key": "username",
									"value": "{{zonar_u}}"
								},
								{
									"key": "password",
									"value": "{{zonar_p}}"
								},
								{
									"key": "target",
									"value": "{{zonar_truck_vin}}"
								},
								{
									"key": "reqtype",
									"value": "vin"
								},
								{
									"key": "logvers",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Location",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"zonar_truck_vin\",\"4V4NC9EHXRN652662\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://omi.zonarsystems.net/interface.php?action=showposition&operation=current&format=xml&customer={{zonar_customer_id}}&username={{zonar_u}}&password={{zonar_p}}&target={{zonar_truck_vin}}&reqtype=vin&logvers=3.6&version=2",
							"protocol": "https",
							"host": [
								"omi",
								"zonarsystems",
								"net"
							],
							"path": [
								"interface.php"
							],
							"query": [
								{
									"key": "action",
									"value": "showposition"
								},
								{
									"key": "operation",
									"value": "current"
								},
								{
									"key": "format",
									"value": "xml"
								},
								{
									"key": "customer",
									"value": "{{zonar_customer_id}}"
								},
								{
									"key": "username",
									"value": "{{zonar_u}}"
								},
								{
									"key": "password",
									"value": "{{zonar_p}}"
								},
								{
									"key": "target",
									"value": "{{zonar_truck_vin}}"
								},
								{
									"key": "reqtype",
									"value": "vin"
								},
								{
									"key": "logvers",
									"value": "3.6"
								},
								{
									"key": "version",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Path",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const currentDate = new Date();\r",
									"const endtime = Math.floor(currentDate.getTime() / 1000);\r",
									"const stime = new Date(currentDate.getTime() - 7 * 24 * 60 * 60 * 1000);\r",
									"const starttime = Math.floor(stime.getTime() / 1000);\r",
									"\r",
									"pm.environment.set(\"starttime\", starttime.toString());\r",
									"pm.environment.set(\"endtime\", endtime.toString());\r",
									"// pm.environment.set(\"zonar_truck_vin\",\"4V4NC9EHXRN652662\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://omi.zonarsystems.net/interface.php?customer={{zonar_customer_id}}&username={{zonar_u}}&password={{zonar_p}}&action=showposition&operation=path&format=json&starttime={{starttime}}&endtime={{endtime}}&version=2&logvers=3.8&reqtype=vin&target={{zonar_truck_vin}}",
							"protocol": "https",
							"host": [
								"omi",
								"zonarsystems",
								"net"
							],
							"path": [
								"interface.php"
							],
							"query": [
								{
									"key": "customer",
									"value": "{{zonar_customer_id}}"
								},
								{
									"key": "username",
									"value": "{{zonar_u}}"
								},
								{
									"key": "password",
									"value": "{{zonar_p}}"
								},
								{
									"key": "action",
									"value": "showposition"
								},
								{
									"key": "operation",
									"value": "path"
								},
								{
									"key": "format",
									"value": "json"
								},
								{
									"key": "starttime",
									"value": "{{starttime}}"
								},
								{
									"key": "endtime",
									"value": "{{endtime}}"
								},
								{
									"key": "version",
									"value": "2"
								},
								{
									"key": "logvers",
									"value": "3.8"
								},
								{
									"key": "reqtype",
									"value": "vin"
								},
								{
									"key": "target",
									"value": "{{zonar_truck_vin}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Asset Activity",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const currentDate = new Date();\r",
									"const endtime = Math.floor(currentDate.getTime() / 1000);\r",
									"const stime = new Date(currentDate.getTime() - 7 * 24 * 60 * 60 * 1000);\r",
									"const starttime = Math.floor(stime.getTime() / 1000);\r",
									"\r",
									"pm.environment.set(\"starttime\", starttime.toString());\r",
									"pm.environment.set(\"endtime\", endtime.toString());\r",
									"pm.environment.set(\"zonar_truck_vin\",\"4V4NC9EHXRN652662\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://omi.zonarsystems.net/interface.php?action=showposition&operation=assetactivity&format=xml&start={{starttime}}&end={{endtime}}&customer={{zonar_customer_id}}&username={{zonar_u}}&password={{zonar_p}}&target={{zonar_truck_vin}}&reqtype=vin&vers=2",
							"protocol": "https",
							"host": [
								"omi",
								"zonarsystems",
								"net"
							],
							"path": [
								"interface.php"
							],
							"query": [
								{
									"key": "action",
									"value": "showposition"
								},
								{
									"key": "operation",
									"value": "assetactivity"
								},
								{
									"key": "format",
									"value": "xml"
								},
								{
									"key": "start",
									"value": "{{starttime}}"
								},
								{
									"key": "end",
									"value": "{{endtime}}"
								},
								{
									"key": "customer",
									"value": "{{zonar_customer_id}}"
								},
								{
									"key": "username",
									"value": "{{zonar_u}}"
								},
								{
									"key": "password",
									"value": "{{zonar_p}}"
								},
								{
									"key": "target",
									"value": "{{zonar_truck_vin}}"
								},
								{
									"key": "reqtype",
									"value": "vin"
								},
								{
									"key": "vers",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}